"use client"

import { useState } from "react"

export default function Chat() {

  const [input, setInput] = useState("");
  const [response, setResponse] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSubmit = async () => {
    setLoading(true)

    try {
      const res = await fetch("/api/gemini/textGenerate", {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({prompt: input})
      })

      const data = await res.json();
      setResponse(data.result)
    } catch (error) {
      setResponse("Something went wrong.");
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col items-center justify-center p-4">
      <h1 className="text-2xl font-bold mb-4">Chat with AI</h1>

      <textarea
        className="w-full max-w-xl h-40 p-4 bg-gray-800 border border-gray-700 rounded-md resize-none mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500"
        placeholder="Type your message..."
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />

      <button
        onClick={handleSubmit}
        disabled={loading || input.trim() === ""}
        className="bg-blue-600 hover:bg-blue-700 px-6 py-2 rounded-md disabled:opacity-50"
      >
        {loading ? "Loading..." : "Submit"}
      </button>

      {response && (
        <div className="mt-6 max-w-xl w-full bg-gray-800 p-4 rounded-md border border-gray-700 whitespace-pre-wrap">
          <strong>Response:</strong>
          <p>{response}</p>
        </div>
      )}
    </div>
  )

}